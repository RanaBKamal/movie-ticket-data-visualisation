<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="E:/FILES/LAMBTON_RESOURCES/TERM_2/Python II/Project/movie-ticket-data-visualisation/Database/database.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="1"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="125"/><column_width id="3" width="3959"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="4,9:mainCustomers"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="Customers" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="52"/><column index="2" value="117"/><column index="3" value="97"/><column index="4" value="70"/><column index="5" value="52"/><column index="6" value="162"/><column index="7" value="162"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="Movies" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="52"/><column index="2" value="120"/><column index="3" value="156"/><column index="4" value="111"/><column index="5" value="121"/><column index="6" value="162"/><column index="7" value="162"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="Tickets" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="52"/><column index="2" value="89"/><column index="3" value="107"/><column index="4" value="52"/><column index="5" value="127"/><column index="6" value="117"/><column index="7" value="74"/><column index="8" value="102"/><column index="9" value="109"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="Users" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="52"/><column index="2" value="108"/><column index="3" value="94"/><column index="4" value="138"/><column index="5" value="93"/><column index="6" value="96"/><column index="7" value="162"/><column index="8" value="162"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="SQL 1">-- creating Users table
CREATE TABLE IF NOT EXISTS Users(
	id INTEGER PRIMARY KEY AUTOINCREMENT,
	full_name VARCHAR(40) NOT NULL,
	username VARCHAR(20) NOT NULL UNIQUE,
	email VARCHAR(40) NOT NULL UNIQUE,
	password VARCHAR(40) NOT NULL,
	user_type VARCHAR(10) NOT NULL DEFAULT &quot;admin&quot;,
	created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
	updated_at DATETIME DEFAULT CURRENT_TIMESTAMP
);

DROP TABLE IF EXISTS Users;

-- creating Customer Table 
CREATE TABLE IF NOT EXISTS Customers(
	id INTEGER PRIMARY KEY AUTOINCREMENT,
	full_name VARCHAR(40) NOT NULL,
	email VARCHAR(40) NOT NULL UNIQUE,
	gender VARCHAR(10) NOT NULL,
	age INT(3) NOT NULL,
	created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
	updated_at DATETIME DEFAULT CURRENT_TIMESTAMP
);
DROP TABLE IF EXISTS Customers;
select * from customers;

-- this is movie section
CREATE TABLE IF NOT EXISTS Movies(
	id INTEGER PRIMARY KEY AUTOINCREMENT,
	movie_name VARCHAR(40) NOT NULL,
	seat_status VARCHAR(1000) NOT NULL,
	movie_type VARCHAR(10) NOT NULL,
	release_date DATE NOT NULL,
	created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
	updated_at DATETIME DEFAULT CURRENT_TIMESTAMP
);

DROP TABLE IF EXISTS Movies;
select * from Movies;
delete from Movies where id = 2;

-- creating ticket
CREATE TABLE IF NOT EXISTS Tickets(
	id INTEGER PRIMARY KEY AUTOINCREMENT,
	movie_id INT NOT NULL,
	ticket_type VARCHAR(10) NOT NULL,
	price FLOAT NOT NULL,
	seat_position VARCHAR(10) NOT NULL,
	customer_id INT NOT NULL,
	user_id INT NOT NULL,
	created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
	updated_at DATETIME DEFAULT CURRENT_TIMESTAMP,
	FOREIGN KEY (movie_id) 	REFERENCES Movies(id),
	FOREIGN KEY (customer_id) REFERENCES Customers(id),
	FOREIGN KEY (user_id) REFERENCES Users(id)
);</sql><current_tab id="0"/></tab_sql></sqlb_project>
